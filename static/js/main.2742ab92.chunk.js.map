{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.jsx","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","undefined","fetchedData","setState","this","src","coronaImg","image","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2742ab92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2Qrgl\",\"card\":\"Cards_card__1sba1\",\"infected\":\"Cards_infected__2perU\",\"recovered\":\"Cards_recovered__6g15j\",\"deaths\":\"Cards_deaths__1EEPI\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n\r\n\r\n\r\nconst Cards = ({data : {confirmed, recovered, deaths, lastUpdate}}) => {\r\n  if(!confirmed){\r\n    return 'Loading..';\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={confirmed.value} duration={3} separator=','/>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n              <Typography variant=\"h5\">\r\n                <CountUp start={0} end={recovered.value} duration={3} separator=','/>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n              <Typography variant=\"h5\">\r\n                <CountUp start={0} end={deaths.value} duration={3} separator=','/>\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n\r\nexport const fetchData =async (country) => {\r\n  let changableUrl = url;\r\n  if(country){\r\n    changableUrl = `${url}/countries/${country}`\r\n  }\r\n  try{\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n\r\n  }catch (error){\r\n      console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  try{\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData)=>({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate\r\n    }))\r\n\r\n    return modifiedData;\r\n\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {data: {countries}} = await axios.get(`${url}/countries`);\r\n    return countries.map((country)=>country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api'\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ( {data: {confirmed, deaths, recovered }, country}) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(()=>{\r\n      const fetchAPI = async () => {\r\n        setDailyData(await fetchDailyData());\r\n      }\r\n      fetchAPI();\r\n  }, [setDailyData]);\r\n\r\n  const lineChart = (\r\n      dailyData.length ? (\r\n      <Line\r\n        data={{\r\n          labels:dailyData.map(( { date } )=>date),\r\n          datasets:[{\r\n            data: dailyData.map(({confirmed}) => confirmed),\r\n            label:'Infected',\r\n            borderColor:'#3333ff',\r\n            fill: true\r\n          },{\r\n            data: dailyData.map(({deaths}) => deaths),\r\n            label:'Deaths',\r\n            borderColor:'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true\r\n          }]\r\n        }}/>) : null\r\n  );\r\n\r\n\r\n  const barChart = (\r\n    confirmed ?\r\n    <Bar\r\n        data={{\r\n          labels:['Infected', 'Recovered', 'Deaths'],\r\n          datasets:[{\r\n            labels:'People',\r\n            backgroundColor: [\r\n            'rgba(0, 0, 255, 0.5)',\r\n            'rgba(0, 255, 0, 0.5)',\r\n            'rgba(255, 0, 0, 0.5)',\r\n            ],\r\n            data:[ confirmed.value, recovered.value, deaths.value ]\r\n          }]\r\n        }}\r\n        options={{\r\n            legend:{display:false},\r\n            title:{display:true, text:`current state in ${country}`}\r\n        }}\r\n    /> : null\r\n  );\r\n  return (\r\n    <div className={styles.container}>\r\n      {country? barChart : lineChart}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api'\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    }\r\n    fetchAPI();\r\n  }, [setFetchedCountries])\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}>\r\n        <option value=\"global\">Global</option>\r\n        {fetchedCountries.map((country, i)=> <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React, {Component} from 'react';\r\n\r\n// import Cards from './components/Cards/Cards';\r\n// import Charts from './components/Charts/Charts';\r\n// import CountryPicker from './components/CountryPicker/CountryPicker';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport coronaImg from './images/image.png'\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    data: {},\r\n    country: ''\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    if(country === 'global'){\r\n      country=undefined;\r\n    }\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({data: fetchedData, country: country});\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n      const fetchedData = await fetchData();\r\n      this.setState({data : fetchedData});\r\n  }\r\n  render(){\r\n\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img src={coronaImg} className={styles.image} alt=\"covid-19\"/>\r\n        <Cards data={data}/>\r\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n        <Chart data={data} country={country}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2fDU4\",\"image\":\"App_image__3PyPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2dJea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1y3TJ\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}